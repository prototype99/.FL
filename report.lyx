#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ../../../.lyx/layouts/mmuthesis
\begin_preamble
%in manjaro you may need texlive-bibtexextra and texlive-latexextra and texlive-langcyrillic
\usepackage{ifthen}
\usepackage{verbatim}
\usepackage{graphicx}
\usepackage{subfigure}
\usepackage{url} 

\usepackage{epsfig} 
\usepackage{tabls}
\usepackage{amssymb}
\usepackage{amsmath}
\interdisplaylinepenalty=2500
\usepackage[usenames]{color}

\usepackage{multicol}
\usepackage{colortbl}
\usepackage{pdfcolmk}
\usepackage{natbib}

\usepackage{color}
\usepackage{times}
\usepackage{amsfonts}
\usepackage{longtable}

\definecolor{MyBlack}{rgb}{0,0,0}
\definecolor{MyGray}{rgb}{0.5,0.5,0.5} 
\definecolor{MyBlue}{rgb}{0,0.4,1}
\definecolor{MyLightBlue}{rgb}{0,0.8,0.7}

\providecommand{\pt}{\cellcolor{MyBlack}}
\providecommand{\st}{\cellcolor{MyGray}}

\providecommand{\bt}{\cellcolor{MyBlue}}
\providecommand{\lt}{\cellcolor{MyLightBlue}}

\usepackage{array}

\usepackage{xeCJK}
\setmainfont{Noto Serif}
\setCJKmainfont{Source Han Sans JP}

\usepackage{hyperref}

%% *** Do not adjust lengths that control margins, column widths, etc. ***
%% *** Do not use packages that alter fonts (such as pslatex).         ***
%% There should be no need to do such things with IEEEtran.cls V1.6 and later.
%%page layout
%%\usepackage{layout}
%%
%%resetting
%%\setlength{\hoffset}{-1in}
%%\setlength{\voffset}{-1in}
%%
%%gap between columns
%%\setlength{\columnsep}{10mm}
%%gap above header
%%\setlength{\topmargin}{1in}
%%between header and text
%%\setlength{\topskip}{0cm}
%%height of main text
%%\setlength{\textheight}{8in}
%% width of text
%%\setlength{\textwidth}{5.5in}
%%odd page left margin
%%\setlength{\oddsidemargin}{1.5in}
%%even page left margin
%%\setlength{\evensidemargin}{4cm}
%%\setlength{\headheight}{0mm}
%%\setlength{\marginparsep}{0mm}
%%\setlength{\marginparwidth}{0mm}
%%\setlength{\headsep}{0mm}
%%bottom margin
%%\setlength{\footskip}{0cm}

\addtocounter{MaxMatrixCols}{20}
\pagenumbering{roman}
\end_preamble
\options 12pt,BSc
\use_default_options false
\maintain_unincluded_children false
\language british
\language_package auto
\inputencoding utf8-cjk
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\font_cjk goth
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style agsm
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style british
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
UIS WITH GYROSCOPIC CONTROLS
\end_layout

\begin_layout Author
By
\begin_inset Newline newline
\end_inset

Seirra Blake
\end_layout

\begin_layout Standard
\align center
A REPORT SUBMITTED TO MANCHESTER METROPOLITAN UNIVERSITY
\begin_inset Newline newline
\end_inset

FOR THE DEGREE OF BACHELOR OF SCIENCE
\begin_inset Newline newline
\end_inset

IN THE FACULTY OF SCIENCE AND ENGINEERING
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename mmu_logo.pdf
	width 40col%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center
Department of Computing and Mathematics
\end_layout

\begin_layout Standard
\align center
Principal adviser Dr.
 Huw Lloyd
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Chapter*
Abstract
\end_layout

\begin_layout Standard
The abstract is a formal description of the reason for doing this work,
 the methods used and results found, and the conclusions drawn.
 It should not be more than one page in length.
\end_layout

\begin_layout Chapter*
Declaration
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "4in"
height_special "none"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
No part of this project has been submitted in support of an application
 for any other degree or qualification at this or any other institute of
 learning.
 Apart from those parts of the project containing citations to the work
 of others, this project is my own unaided work.
 This work has been carried out in accordance with the Manchester Metropolitan
 University research ethics procedures, and has received ethical approval
 number 36448
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Plain Layout
Signed:
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Plain Layout
Date:
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Acknowledgements
\end_layout

\begin_layout Standard
The acknowledgements thank the people who helped you do the work.
 It's traditional to include your supervisor....
\end_layout

\begin_layout Chapter*
Abbreviations
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="47" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.FL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DotFL
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6axis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gyroscopic and accelerometer (control)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
API
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Application Programming Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Augmented Reality
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Centimetres
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DidOS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Didelphimorphic OS
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DLL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dynamic-Link Library
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DotFL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dance Of The Flowing Lines
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DPI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dots Per Inch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS4/DS5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DSBattery
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS4 Battery
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DualShock 4 v2 (gamepad)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DualSense (gamepad)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DualSense 2 (gamepad, theoretical model)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ESport
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Electronic Sport
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GG
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Go Graphics
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GUI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graphical UI
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HDMI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
High Definition Multimedia Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Human Interface Device
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The author
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JNA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java Native Access
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JNI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java Native Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JavaScript
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JVM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java Virtual Machine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keyboard
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Computer keyboard
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laptop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laptop PC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LIDAR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laser Imaging, Detection, And Ranging
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mouse
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Computer mouse
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MilliSeconds
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operating System
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Personal Computer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PS5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PlayStation 5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PSP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PlayStation Portable
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SC Controller
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Steam Controller Controller
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SDL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simple DirectMedia Layer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SFML
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simple and Fast Multimedia Library
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SPDE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Scala Processing Development Environment
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
US
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
United States
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
USB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Universal Serial Bus
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VR
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Virtual Reality
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WD2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Karcher WD2 vacuum cleaner
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WIP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Work In Progress
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XB1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Xbox One
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XB1S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XB1 Slim
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XB360
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Xbox 360
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YAJSDL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yet Another Java SDL
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{headings}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Inspiration
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
The use of 6axis could present a new way to interact with PCs, this warrants
 some basic research to help identify future related studies that could
 be undertaken, as well as the general efficacy of such a concept.
\end_layout

\begin_layout Section
Course specific learning outcomes
\end_layout

\begin_layout Itemize
Analyse, design, and implement algorithms using a range of appropriate languages
 and/or methodologies.
\end_layout

\begin_layout Itemize
Apply the principles and operation of languages, compilers and interpreters.
\end_layout

\begin_layout Section
Hypothesis
\end_layout

\begin_layout Standard
I hypothesise that the benefits seen in FPS videogames when 6axis is used
 to aim
\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

 could also translate to a PC experience.
 I hypothesise that users will give positive testimonials, including digital
 artists, if available.
 I hypothesise that with some basic practice a hardware keypad such as seen
 for the DS5 could be comparable to an actual keyboard.
\end_layout

\begin_layout Section
Aim
\end_layout

\begin_layout Standard
Investigate alternatives to mouse and keyboard for a desktop PC by prototyping
 gamepad-based drawing software that could later be extended and adapted
 into a full system.
\end_layout

\begin_layout Section
Objectives
\end_layout

\begin_layout Standard
For this project there are three main deliverables: the software itself,
 and two pieces of research.
 A large part of the project will follow a linear structure, however near
 the end I plan to adopt an agile/cyclical structure as I perfect the final
 deliverable
\end_layout

\begin_layout Enumerate
Create a Linux compatible layer to interact with the gyroscopic controls,
 it is suspected that a library based around libSDL would be the best fit.
\end_layout

\begin_layout Enumerate
Successfully translate gyroscopic movements to the movement of an onscreen
 cursor
\end_layout

\begin_layout Enumerate
Research existing art software that utilises the same or similar gamepads
 (if any)
\end_layout

\begin_layout Enumerate
Implement drawing features that illustrate the versatility of the hardware
\end_layout

\begin_layout Enumerate
Investigate whether it is possible to make it windows compatible to increase
 userbase
\end_layout

\begin_layout Enumerate
Gather test user feedback
\end_layout

\begin_layout Enumerate
As part of the project I will test the typing speed of a popular ``chatpad
\begin_inset Quotes erd
\end_inset

 attachment/accessory.
 While I feel it is important to have some preliminary data to support justifica
tion for future developments I do not feel it is as important as establishing
 whether or not 6axis gamepads could be viable as pointing devices according
 to user opinions.
\end_layout

\begin_layout Section
Problems
\end_layout

\begin_layout Standard
The biggest risk I can see is that I have no experience writing software
 to work with 6axis gamepads.
 I feel that the allotted time should be enough for me to both design and
 implement the appropriate software to do so.
\end_layout

\begin_layout Chapter
Research
\end_layout

\begin_layout Section
Drawing libraries
\end_layout

\begin_layout Standard
This will form the crucial backbone for the rest of the application, therefore
 all other libraries will need to work with this library (use the same language).
 Although there are probably alternative ways to achieve the same effect,
 I have decided to use processing as I am familiar with it, as a result
 this chapter is mostly a compilation of the available options.
\end_layout

\begin_layout Subsection
Clojure/ClojureScript: Quil
\end_layout

\begin_layout Standard
I am not familiar with this language, so it is an unlikely choice.
 This is a version of processing written in Clojure
\begin_inset CommandInset citation
LatexCommand citep
key "Quil2014"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
CoffeeScript mode
\end_layout

\begin_layout Standard
I am not familiar with this language, so it is an unlikely choice.
 The latest version of this is built to the specification of processing
 2 which is quite old, it is based on processing.js
\begin_inset CommandInset citation
LatexCommand citep
key "jenettFjenettCoffeescriptmodeprocessing2015"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Go: GG
\end_layout

\begin_layout Standard
GG is regarded by some to be the closest thing go has to an equivalent version
 of processing
\begin_inset CommandInset citation
LatexCommand citep
key "Horton2018"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Java: Processing
\end_layout

\begin_layout Standard
I am very familiar with this language and feels this may be the best choice
 due to familiarity.
 This is the original version produced in part by Casey Reas
\begin_inset CommandInset citation
LatexCommand citep
key "Reas2019"
literal "false"

\end_inset

, and the one I used before.
 The language was historically known as ``proce55ing
\begin_inset Quotes erd
\end_inset

 due to ``proce55ing.net
\begin_inset Quotes erd
\end_inset

 being the only available domain
\begin_inset CommandInset citation
LatexCommand citep
key "Reas2012"
literal "false"

\end_inset

.
 Even now, processing can often be referred to as ``p5
\begin_inset Quotes erd
\end_inset

, an obscure holdover from the past
\begin_inset CommandInset citation
LatexCommand citep
key "McCarthy2017"
literal "false"

\end_inset

.
 Processing is inspired by OpenGL, PostScript and Design By Numbers
\begin_inset CommandInset citation
LatexCommand citep
key "Parrish2016"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
JS
\end_layout

\begin_layout Standard
I am familiar with this language, they do not have fond memories of it.
 I also do not do well with weak typing.
\end_layout

\begin_layout Subsubsection
P5.js
\end_layout

\begin_layout Standard
Having begun development in 2013
\begin_inset CommandInset citation
LatexCommand citep
key "processingCodeFrequencyProcessing2021"
literal "false"

\end_inset

, this project produced by Lauren Lee McCarthy
\begin_inset CommandInset citation
LatexCommand citep
key "McCarthy2013"
literal "false"

\end_inset

 has grown to become the successor to the original processing.js and is the
 official JS implementation
\begin_inset CommandInset citation
LatexCommand citep
key "Foundation2016"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Processing.js
\end_layout

\begin_layout Standard
This is the original, having been produced in 2008
\begin_inset CommandInset citation
LatexCommand citep
key "Resig2008"
literal "false"

\end_inset

.
 This project was archived, therefore it will be of minimal use
\begin_inset CommandInset citation
LatexCommand citep
key "processing.jsProcessingjsProcessingjs2018"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Python
\end_layout

\begin_layout Standard
I do not do well with weak typing, therefore this is not a likely choice.
\end_layout

\begin_layout Subsubsection
P5Py
\end_layout

\begin_layout Standard
This is a native python implementation of processing.
\begin_inset CommandInset citation
LatexCommand citep
key "p5pyP5py2021"
literal "false"

\end_inset


\end_layout

\begin_layout Subsubsection
Processing.py
\end_layout

\begin_layout Standard
This is the official python implementation
\begin_inset CommandInset citation
LatexCommand citep
key "Foundation2016"
literal "false"

\end_inset

.
 This uses Jython, a bridge that allows it to use both native python and
 the original java classes present in processing.
 This uses a custom Jython based upon python 2.7
\begin_inset CommandInset citation
LatexCommand citep
key "Parrish2016"
literal "false"

\end_inset

; python 2.7 is heavily deprecated
\begin_inset CommandInset citation
LatexCommand citep
key "petersonPythonInsiderPython2020"
literal "false"

\end_inset

, so unless that detail has changed this is definitely not a good option.
 
\end_layout

\begin_layout Subsection
R: Processing.R
\end_layout

\begin_layout Standard
I am not familiar with this language, so it is an unlikely choice.
 This version adapts the java version to work with R.
 It is worth noting that it is listed as experimental
\begin_inset CommandInset citation
LatexCommand citep
key "Gao2017"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Ruby: JRubyArt
\end_layout

\begin_layout Standard
I have tried to write code in this language previously and struggled, therefore
 this language is an unlikely choice.
 This uses JRuby to allow for processing in the ruby language.
 JRuby allows ruby code to access java code
\begin_inset CommandInset citation
LatexCommand citep
key "Prout2017"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Scala: SPDE
\end_layout

\begin_layout Standard
I am not familiar with this language, so it is an unlikely choice.
 Scala runs on the JVM, so this can use the original processing libraries
 without issue
\begin_inset CommandInset citation
LatexCommand citep
key "SPDE2009"
literal "false"

\end_inset

.
 With the latest code commit being from 2012
\begin_inset CommandInset citation
LatexCommand citep
key "nathanSpde2012"
literal "false"

\end_inset

, it is unlikely this would work as expected.
\end_layout

\begin_layout Section
Extended hardware testing
\end_layout

\begin_layout Standard
In order to do long term hardware testing videogames were played over extended
 periods of time.
 This may at first seem like an odd choice, however by incorporating a leisure
 activity it can be assured that the extended tests will be carried out
 with a consistent amount of motivation; videogames have a wide range of
 forms of interaction, which helps ensure that something can be found that
 mirrors general PC usage.
 For the XB1S gamepad there was generally no need to do so, as I already
 had a high amount of familiarity, this was purely for the Sony produced
 gamepads, for which I have no experience.
\end_layout

\begin_layout Subsection
Among us
\end_layout

\begin_layout Standard
This had a native DS control scheme.
 The control scheme was however not optimal, as it required a trackpad click
 to enter text, which proved to impact the overall performance.
 I had to switch between gamepad and keyboard which was a generally bothersome
 experience which would not occur with the keyboard attachment.
\end_layout

\begin_layout Subsection
Sid Meier's civilization 6
\end_layout

\begin_layout Standard
Although traditionally a keyboard and mouse game, the game is being ran
 on steam which allows the use of custom control schemes
\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

.
 At first there was issues due to intense drift to the right of the display,
 however after calibrating the gamepad
\begin_inset CommandInset citation
LatexCommand citep
key "Faux2018"
literal "false"

\end_inset

 this disappears; there may be a need to implement a calibration feature,
 unless the calibration saves at a device level.
\end_layout

\begin_layout Subsection
Warframe
\end_layout

\begin_layout Section
Hardware experience
\end_layout

\begin_layout Subsection
Connection
\end_layout

\begin_layout Subsubsection
DS4
\end_layout

\begin_layout Standard
This could not connect to my PC via USB, however it could do so via Bluetooth
 with little issue.
 As noted in appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:DS4-user-discussion"
plural "false"
caps "false"
noprefix "false"

\end_inset

, it would appear that there is some kind of technical difference with the
 official USB adaptor that facilitates a connection, however I struggled
 to find a definitive source.
 Thankfully, the gamepad has the least latency when used wirelessly, so
 this is not a major issue.
\end_layout

\begin_layout Subsubsection
DS5
\end_layout

\begin_layout Standard
This could connect very easily to my PC via USB, it seems capable of using
 all functionality successfully.
\end_layout

\begin_layout Subsubsection
XB1S gamepad
\end_layout

\begin_layout Standard
This gamepad can connect via USB very easily.
 I did not test wireless connectivity as it was out of scope.
\end_layout

\begin_layout Subsection
Recharging
\end_layout

\begin_layout Subsubsection
DS4
\begin_inset CommandInset label
LatexCommand label
name "subsec:DS4-recharge"

\end_inset


\end_layout

\begin_layout Standard
This was unable to charge, it is suspected this could be related to appendix
 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:DS4-user-discussion"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
DS5
\end_layout

\begin_layout Standard
This was able to recharge easily using a USB C connector, this is the ideal
 solution.
\end_layout

\begin_layout Subsubsection
XB1S gamepad
\end_layout

\begin_layout Standard
This can recharge using any micro USB connector.
 The model I own is old and appears to struggle operating with solely the
 internal battery, so battery degradation may be a key issue with this hardware.
\end_layout

\begin_layout Subsection
Usage
\end_layout

\begin_layout Subsubsection
XB1S gamepad
\end_layout

\begin_layout Standard
I have an extensive amount of experience using this gamepad.
 It has no notable features outside of localised force feedback for the
 triggers, which can at times add to the immersive experience, however the
 goal is not immersion.
\end_layout

\begin_layout Section
Hardware input latency
\end_layout

\begin_layout Standard
Input latency is not a key concern for .FL, however it is still a factor
 that can alter a user's experience.
 As seen in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Gamepad-latency-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the DS4 has generally favourable latency, especially when used wirelessly.
 It is worth noting that latency does not stop at the gamepad, therefore
 it is best to test the experience of .FL itself for latency issues.
 ``With the original model DualShock 4s, even when a USB cable is connected
 the controller only communicates via Bluetooth
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "R2018"
literal "false"

\end_inset

.
 There are reports that a HDMI converter ``adds 0.25-0.5ms of lag
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Woodall2019"
literal "false"

\end_inset

, so I could add the removal of any such converters as a suggested solution
 for solving latency, however clearly there could be better results by switching
 from wired to wireless in some situations, as there's a potential difference
 of 10.7ms.
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Gamepad-latency-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

 does not account for monitor related latency
\begin_inset CommandInset citation
LatexCommand citep
key "Woodall2019"
literal "false"

\end_inset

, therefore that is another factor to consider.
 Esports is an industry that uses gamepads extensively; in the Esport community
 it can be found that in real world applications while wireless latency
 should be lower, it is often prone to variance
\begin_inset CommandInset citation
LatexCommand citep
key "Handa2018"
literal "false"

\end_inset

.
 it can be assumed that the range of the DS4 is 3 metres due to the fact
 that ``my DS4 can have connection issues when I sit 3 meters (around 10
 ft) away from my PS4, stretch and put the controller behind my back or
 head
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "R2018"
literal "false"

\end_inset

.
 It is theorised that the DS4 USB port may be``lower than micro USB usually
 is
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "R2018"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gamepad
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Latency (ms)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS4 v1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
43.9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS4 wired
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
54.8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS4 wireless
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
44.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GameCube
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
74.8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wii
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
73.9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wii U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
76.9
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Input latency of well-known gamepads
\begin_inset CommandInset citation
LatexCommand citep
key "Woodall2019"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "tab:Gamepad-latency-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Hardware interaction
\end_layout

\begin_layout Standard
There are a variety of possible libraries, as SDL is a popular library for
 interacting with gamepads it is likely it will be the best choice, however
 game control plus seems promising too.
 Due to unforeseen difficulties with DS4 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:DS4-recharge"
plural "false"
caps "false"
noprefix "false"

\end_inset

), it became a higher priority to finish DS5 development first.
\end_layout

\begin_layout Subsection
C++
\end_layout

\begin_layout Standard
C++ has a lot of promise for producing a high performance application.
 The issue that could arise is the longer development time associated with
 c++.
\end_layout

\begin_layout Subsubsection
Dual_sense
\end_layout

\begin_layout Standard
This repository is listed as WIP, however it could be very possible to help
 the developer finish it
\begin_inset CommandInset citation
LatexCommand citep
key "jakubekXertDevDualSense2022"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Thoom76/DualShock4
\end_layout

\begin_layout Standard
This library is a basic one, it has no uniquely identifiable name.
 It appears to purely expose the DS4 data, leaving the programmer to do
 the rest
\begin_inset CommandInset citation
LatexCommand citep
key "smeeleDualShock42021"
literal "false"

\end_inset

.
 As seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:An-excerpt-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

, there is full access to the required 6axis data.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename dualshock4-cplusplus.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
An excerpt of the output, the format is too vertical to effectively include
 all of it.
\begin_inset CommandInset label
LatexCommand label
name "fig:An-excerpt-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
JoyShockLibrary
\end_layout

\begin_layout Standard
This library is both cross platform and has support for a range of controllers,
 this would probably be ideal if there was not a time constraint
\begin_inset CommandInset citation
LatexCommand citep
key "smartJoyShockLibrary2022a"
literal "false"

\end_inset

.
 JoyShockMapper up to version 2.2.0 uses this library.
 Even after setting the compiler to clang, however, this example application
 would not compile, perhaps eluding to JoyShockLibrary not being the easiest
 to implement
\begin_inset CommandInset citation
LatexCommand citep
key "electronicksJoyShockMapper2022"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
SDL
\end_layout

\begin_layout Standard
This is the native version of SDL, it can generally be expected that SDL
 supports the DS4.
 While it was easy enough to acquire the DS5, not everyone may wish to purchase
 the DS5 as a standalone device, even for software development.
 This should be simple enough: the DS5 is designed for the PS5, so just
 get the PS5; however, due to shortages
\begin_inset CommandInset citation
LatexCommand citep
key "Mochizuki2022"
literal "false"

\end_inset

, that is not as simple as it should be.
 This all means that it could be expected that SDL would not have DS5 support,
 however with release 2.0.14 that all changed
\begin_inset CommandInset citation
LatexCommand citep
key "Lantinga2020"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
C#
\end_layout

\begin_layout Standard
This is not a likely choice.
 Despite priding itself on being cross platform, C# is hardly ideal compared
 to other languages.
\end_layout

\begin_layout Subsubsection
DualSenseSupport
\end_layout

\begin_layout Standard
This claims to only have preliminary support
\begin_inset CommandInset citation
LatexCommand citep
key "unlokDualSenseSupport2022"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
DualSenseX
\end_layout

\begin_layout Standard
This seems to be more advanced, having the ability to emulate the XB360
 gamepad or DS4
\begin_inset CommandInset citation
LatexCommand citep
key "paliverseDualSenseX2022a"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
UniSense
\end_layout

\begin_layout Standard
This is specifically an extension for unity, I expect it will be of minimal
 use
\begin_inset CommandInset citation
LatexCommand citep
key "oliveiraUniSenseDualSensePlugin2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Go
\end_layout

\begin_layout Standard
This language has a surprisingly more active than expected community for
 the DS4.
\end_layout

\begin_layout Subsubsection
Gds4
\end_layout

\begin_layout Standard
This is a library designed for the DS4, at a glance it does not appear to
 have good documentation, which could be an issue
\begin_inset CommandInset citation
LatexCommand citep
key "darkautismGolangDualsock2020"
literal "false"

\end_inset

.
 When testing this library it did not work, quoting ``host is down
\begin_inset Quotes erd
\end_inset

 as the issue.
\end_layout

\begin_layout Subsubsection
Gods4
\end_layout

\begin_layout Standard
This is another library designed for the DS4.
 The documentation is quite extensive, making it a more likely choice even
 though it is older
\begin_inset CommandInset citation
LatexCommand citep
key "kpeu3iGods42019"
literal "false"

\end_inset

.
 Surprisingly this library could not detect the connected controller, meaning
 no available go libraries seem to work.
\end_layout

\begin_layout Subsection
Java
\end_layout

\begin_layout Subsubsection
ControllerBuddy
\end_layout

\begin_layout Standard
This may prove useful.
 support for DS4 and DS5 is listed, so it may be a helpful resource
\begin_inset CommandInset citation
LatexCommand citep
key "hausnerBwRavenclControllerBuddy2022"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Game control plus
\end_layout

\begin_layout Standard
This library is designed specifically for use with processing.
 The use of G4P in the library may prove useful as inspiration for UI drawing
 in the future
\begin_inset CommandInset citation
LatexCommand citep
key "Lager2014"
literal "false"

\end_inset

.
 As seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Testing-the-library"
plural "false"
caps "false"
noprefix "false"

\end_inset

, this library is incapable of detecting the DS4's 6axis capabilities.
 After some examination of the source code, it appears that this library
 leverage's JInput from 2014 or 2015, so it may be as simple as swapping
 out the JInput library that helps form the greater whole.
 It is worth noting that there is a GitHub repository
\begin_inset CommandInset citation
LatexCommand citep
key "lagerGameControl2015"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename game-control-plus.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Testing the library using the built in example
\begin_inset CommandInset label
LatexCommand label
name "fig:Testing-the-library"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Gamepad4J
\end_layout

\begin_layout Standard
This is another library with some potential.
 Notable features include access to all basic input types and adaptive button
 prompts
\begin_inset CommandInset citation
LatexCommand citep
key "dudleyGamepad4J2021"
literal "false"

\end_inset

.
 Discussions surrounding the library suggest that it can access the required
 data
\begin_inset CommandInset citation
LatexCommand citep
key "Park2018"
literal "false"

\end_inset

.
 This needed JUnit installed to proceed, Ouya code also had to be removed.
 An assumption was made that this used SDL, that assumption soon proved
 to be wrong, so no further testing will occur.
\end_layout

\begin_layout Subsubsection
JInput
\end_layout

\begin_layout Standard
As previously mentioned, game control plus uses JInput extensively.
 Theoretically all that is needed to achieve 6axis support is to integrate
 a newer JInput designed to utilise all the capabilities of the DS4, the
 newest JInput library does not appear to do such a thing
\begin_inset CommandInset citation
LatexCommand citep
key "jinputJInput2019"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
JInput steam controller
\end_layout

\begin_layout Standard
There is no DS4 JInput, however, there is a steam controller JInput
\begin_inset CommandInset citation
LatexCommand citep
key "oddwargJinputsteamcontroller2021"
literal "false"

\end_inset

.
 The steam controller provides all of the same crucial input types that
 the DS4 has, so it could be possible to adapt it
\begin_inset CommandInset citation
LatexCommand citep
key "dempseyTeardownSteamController2016"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
JSFML
\end_layout

\begin_layout Standard
This is a port of SFML to java; as seen in appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Feasibility-study-review"
plural "false"
caps "false"
noprefix "false"

\end_inset

, it was suggested as a solution by the supervisor, so it is worth looking
 at.
 It does not appear to receive many updates so it may not be the best choice
\begin_inset CommandInset citation
LatexCommand citep
key "deflatedpickleJSFML2021"
literal "false"

\end_inset

.
 Due to the fact that it is an engine as opposed to a dedicated library,
 it does not immediately appear to be a good fit for the project.
\end_layout

\begin_layout Subsubsection
Kaliber
\end_layout

\begin_layout Standard
This may be another solution, it is hard to tell as it is quite old
\begin_inset CommandInset citation
LatexCommand citep
key "fennisJKFennisKaliber2012"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
LibJSDL
\end_layout

\begin_layout Standard
This is a direct port using JNA
\begin_inset CommandInset citation
LatexCommand citep
key "siddiqiControllerInputVisualizer2022"
literal "false"

\end_inset

.
 This library is able to access SDL successfully and performantly.
\end_layout

\begin_layout Subsubsection
Sdl2gdx
\end_layout

\begin_layout Standard
This is designed as somewhat of a fusion of SDL and libGDX.
 Supposed benefits over pure libGDX are hot-plugging support, screen-mode
 change support, functional rumble support, predefined controller mappings
 and support for more than 4 XInput controllers
\begin_inset CommandInset citation
LatexCommand citep
key "Smith2019"
literal "false"

\end_inset

.
 It is worth noting, however, that the project is 3 years old, and since
 then it appears SDL has all of the features that were originally missing.
 This uses JNI to access SDL.
 This library does not appear to have 6axis support.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Firstly, the unofficial example program was tested, as seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-unofficial-GUI"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 This was interesting in that it correctly displayed every button, although
 the right trigger would not function
\begin_inset CommandInset citation
LatexCommand citep
key "siddiqiControllerInputVisualizer2022"
literal "false"

\end_inset

.
 At first the program would not function, however this was fixed by changing
 it to bytecode version 6
\begin_inset CommandInset citation
LatexCommand citep
key "Veis2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename sdl2gdx.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The unofficial GUI example
\begin_inset CommandInset label
LatexCommand label
name "fig:The-unofficial-GUI"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

Secondly, the official example program was tested, as seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-official-GUI"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 While less visual, all the buttons are detected, including the right trigger.
 Despite being clearly advertised, the rumble did not work.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename sdl2gdx-official.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The official GUI example
\begin_inset CommandInset label
LatexCommand label
name "fig:The-official-GUI"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
SDL4J
\begin_inset CommandInset label
LatexCommand label
name "subsec:SDL4J"

\end_inset


\end_layout

\begin_layout Standard
This uses a windows DLL of SDL, however it may be possible to adapt it to
 use the Linux binary.
 This library uses JNA
\begin_inset CommandInset citation
LatexCommand citep
key "glossonGaming32SDL4J2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
SDLJ
\end_layout

\begin_layout Standard
This has minimal information, but is relatively up to date
\begin_inset CommandInset citation
LatexCommand citep
key "lewisMattjlewisSdlj2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Sdljava
\end_layout

\begin_layout Standard
This is also a potential choice.
 Along with the porting of SDL, it has OpenGL specific bindings
\begin_inset CommandInset citation
LatexCommand citep
key "Ganza2005"
literal "false"

\end_inset

.
 Being a binding to SDL 1.2
\begin_inset CommandInset citation
LatexCommand citep
key "rojekSdljava2014"
literal "false"

\end_inset

, it may prove to be a challenge getting this library to behave as expected
 as SDL 2 has major API changes
\begin_inset CommandInset citation
LatexCommand citep
key "Libsdl2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Sdljoystick4java
\end_layout

\begin_layout Standard
This is another JNI SDL binding, it seems to be relatively up to date but
 focus on basic functions
\begin_inset CommandInset citation
LatexCommand citep
key "pavelSdljoystick4java2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
YAJSDL
\end_layout

\begin_layout Standard
This is a JNA based java SDL binding.
 While the language is not a reason to discount the repository, the year
 may be
\begin_inset CommandInset citation
LatexCommand citep
key "rihineNoqisofonYajsdl2012"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
JS
\end_layout

\begin_layout Subsubsection
DS-examples
\end_layout

\begin_layout Standard
As the name suggests, this is a set of examples; this could be useful if
 I end up using JS
\begin_inset CommandInset citation
LatexCommand citep
key "steinherzDsexamples2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
DualShock library
\begin_inset CommandInset label
LatexCommand label
name "sec:JS:-Dualshock-library"

\end_inset


\end_layout

\begin_layout Standard
This node.js library may in fact have the most extensive set of capabilities
 out of any of the choices here
\begin_inset CommandInset citation
LatexCommand citep
key "Pecacheu2021"
literal "false"

\end_inset

.
 The original branch of code does not work, however there are three other
 branches
\begin_inset CommandInset citation
LatexCommand citep
key "Pecacheu2021"
literal "false"

\end_inset

.
 With so many forked versions available, it could be assumed that at least
 one of them may fix the issue or offer guidance as to what needs doing.
 The branch by wonderunit had a large number of revert commits that could
 be avoided by having an earlier base commit, so the first necessary action
 was to create a localised version with that corrective action taken; removing
 unnecessary commits aids in analysis of source code changes as it cleans
 up the data that will be analysed.
\end_layout

\begin_layout Subsubsection
DualSense
\end_layout

\begin_layout Standard
This claims to just collect information, however from what can be seen,
 it is likely that it can be used as an input library
\begin_inset CommandInset citation
LatexCommand citep
key "reynoldsSonyDualSenseWireless2020"
literal "false"

\end_inset

.
 Unfortunately this did not seem to work, it may be that this is designed
 to interface with the windows driver.
\end_layout

\begin_layout Subsubsection
Node-DualSense
\begin_inset CommandInset label
LatexCommand label
name "subsec:Node-dualsense"

\end_inset


\end_layout

\begin_layout Standard
This is based on pydualsense (
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Pydualsense"
plural "false"
caps "false"
noprefix "false"

\end_inset

), it is able to read input and set LED status, powered by NodeJS
\begin_inset CommandInset citation
LatexCommand citep
key "camilleNodedualsense2022"
literal "false"

\end_inset

.
 As seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-successful-basic"
plural "false"
caps "false"
noprefix "false"

\end_inset

, this library is definitely capable, unfortunately it does not read 6axis
 data.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename dualsense-js.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A successful basic reading of DS5 input states
\begin_inset CommandInset label
LatexCommand label
name "fig:A-successful-basic"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Python
\end_layout

\begin_layout Subsubsection
Pydualsense
\begin_inset CommandInset label
LatexCommand label
name "subsec:Pydualsense"

\end_inset


\end_layout

\begin_layout Standard
This relies on an external library called HIDAPI.
 It seems to allow configuration of the trigger pressure
\begin_inset CommandInset citation
LatexCommand citep
key "kPydualsense2021"
literal "false"

\end_inset

.
 Testing with a library based on this (
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Node-dualsense"
plural "false"
caps "false"
noprefix "false"

\end_inset

) shows that it may be a capable base.
 The code does not appear to be ready for 6xis capabilities.
\end_layout

\begin_layout Subsubsection
SC controller
\end_layout

\begin_layout Standard
This is designed primarily as a driver, however due to its user mode nature,
 it should be easy to adapt into a library
\begin_inset CommandInset citation
LatexCommand citep
key "kozecSCController2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Additional features
\end_layout

\begin_layout Subsubsection
Ds4-lightbar
\end_layout

\begin_layout Standard
This allows access to the gamepad light-bar.
 This is done by leveraging DualShock library(
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:JS:-Dualshock-library"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\begin_inset CommandInset citation
LatexCommand citep
key "cotaDs4lightbar2021"
literal "false"

\end_inset

.
 This could be used to display the current selected colour.
\end_layout

\begin_layout Subsubsection
Dsbattery
\end_layout

\begin_layout Standard
This library provides access to the battery level, and the ability to disconnect
 the controller
\begin_inset CommandInset citation
LatexCommand citep
key "tomsonsDsbattery2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Section
Input devices
\end_layout

\begin_layout Standard
note: in progress.
 basically converting project background into properly sectioned research
\end_layout

\begin_layout Subsection
DS4
\end_layout

\begin_layout Subsection
DS5
\end_layout

\begin_layout Section
Input methods
\end_layout

\begin_layout Subsection
Keyboard
\end_layout

\begin_layout Standard
The keyboard has often been a limiting factor to the miniaturisation, leading
 to popular form-factors such as laptops.
 The first laptop, as seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-grid-compass"
plural "false"
caps "false"
noprefix "false"

\end_inset

, is near indistinguishable to any modern laptop, the differences being
 attributable to advances in miniaturisation and thermal efficiency.
 For the foreseeable future the keyboard remains a necessary addition to
 any all-purpose PC installation; Despite how the keyboard impacts portability,
 alternatives fail to gain sizeable adoption.
 It is possible to fully operate a PC with just a keyboard, however users
 will often pair one with a high resolution pointing device.
 When a keyboard is not required, devices can be much smaller, as seen with
 smartphones or tablet PCs.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename grid-compass-laptop.jpg
	display false
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A grid compass
\begin_inset CommandInset citation
LatexCommand citep
key "anonymousTechnology2016"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:The-grid-compass"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Mouse
\end_layout

\begin_layout Standard
The mouse has enjoyed success due to its intuitive design
\begin_inset CommandInset citation
LatexCommand citep
key "yunTurningMobileDevice2015"
literal "false"

\end_inset

.
 Despite a wide array of options
\begin_inset CommandInset citation
LatexCommand citep
key "yunTurningMobileDevice2015"
literal "false"

\end_inset

, the mouse has been a longstanding companion to the PC, often thought of
 as being symbolically tied to them, although this is becoming less common.
 This interface 
\begin_inset Quotes eld
\end_inset

requires a surface
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "yunTurningMobileDevice2015"
literal "false"

\end_inset

 which is typically flat, and semi-dedicated, which creates a rigid, fixed
 workspace layout that consumes a large amount of space compared to other
 options.
\end_layout

\begin_layout Subsection
XR
\end_layout

\begin_layout Subsubsection
AR
\end_layout

\begin_layout Subsubsection
VR
\end_layout

\begin_layout Section
Project background
\end_layout

\begin_layout Standard
(mouse) The limited set of motions seen in such a setup is well known to
 cause repetitive strain injury.
 The goal of this project is not to solve repetitive strain, however it
 is expected that the final deliverable may assist with such an issue.
 I feel that users could benefit from a compact, portable alternative that
 is similarly low power.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

VR promises to offer a new way to interact with computers in subtly different
 ways, however a high electrical, processing and £899
\begin_inset CommandInset citation
LatexCommand citep
key "currysBuyHTCVive2021"
literal "false"

\end_inset

 cost as well as a lack of familiarity makes such a notion seem as of yet
 distant.
 AR would offer an even higher level of interaction, however AR has a cost
 of $3500
\begin_inset CommandInset citation
LatexCommand citep
key "Microsoft2021"
literal "false"

\end_inset

, thus it is not particularly relevant to talk about AR separately.
 One way to try and make AR cheaper is by emulating it via cameras on a
 VR headset.
 These methods are otherwise compelling due to the fact that they allow
 more natural movement and the ability for the user to feel that they are
 exploring a true three dimensional space.
 It can be expected that VR will become more common as increased demand
 leads to the development of cheaper, more affordable, viable solutions.
 One solution is the Oculus quest 2 at a cost of ₤299
\begin_inset CommandInset citation
LatexCommand citep
key "currysBuyOCULUSQuest2021"
literal "false"

\end_inset

 which also has wireless mobility, however the pricing model has lead to
 privacy concerns.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Gamepads could prove to be the perfect stepping stone to future VR experiences
 due to their lower cost; the DS5, one of the most advanced currently, costs
 ₤59.99
\begin_inset CommandInset citation
LatexCommand citep
key "currysBuyPLAYSTATIONPS52021"
literal "false"

\end_inset

.
 Gamepads are designed with ergonomics in mind, allowing a comfortable two
 handed grip for an extended amount of time.
 Due to their prevalence in leisure activities a lot of people already have
 a gamepad, and if not they are often at around the same price as a medium
 quality mouse thus being easily accessible.
 It is generally accepted that gamepads 
\begin_inset Quotes eld
\end_inset

make couch play better
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

, following that logic it has to be wondered what they could do for 'couch
 work'.
 Gamepads are capable of adding new ways to control experiences thanks to
 a variety of features such as variable pressure triggers, thumbsticks,
 programmable lights and force feedback.
 As an example, on the late steam controller, a user 
\begin_inset Quotes eld
\end_inset

can play Vivaldi on their haptic trackpads
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

; although it may seem comical or absurd at first, this is one example of
 many that illustrates how gamepads can create new experiences using their
 wide variety of inputs, and would be very compelling for a musician especially.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

All the same, trackpads are not a valid alternative to a mouse, as 
\begin_inset Quotes eld
\end_inset

even after five years
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

 a casual user struggles to use them as effectively as a mouse, a concerning
 fact considering the rising popularity of laptop devices.
 
\begin_inset Quotes eld
\end_inset

Applying any pressure at all will create friction with the pad
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

 which may explain why the computer mouse (two low friction surfaces) does
 comparably better than the trackpad (a low friction surface and a high
 friction surface).
 Another highlighted issue is having to 
\begin_inset Quotes eld
\end_inset

to make multiple swipes
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

 an issue that was in fact experienced in the making of this feasibility
 study.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

A wide range of gamepads additionally feature gyroscopic and accelerometer
 controls, which could allow for an accurate pointing experience.
 During testing Valve found motion control to be 
\begin_inset Quotes eld
\end_inset

too tiring in some use cases
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

, however this may have been due to the poorer build quality that featured
 in the final version of the steam controller and their inexperience in
 motion control, an argument that could be supported by their later use
 of motion control in the Valve index controllers and the general success
 of the Nintendo Wii: an almost purely motion based experience.
 
\begin_inset Quotes eld
\end_inset

The advantage of gyro[scopic control] is that there’s zero friction
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

 which allows users to follow far more natural movements.
 This statement makes sense when the reason computer mice evolved from ball
 technology to optical technology is considered.
 Even if we ignore gyroscopic controls and look at the Xbox controller,
 a purely thumbstick based controller in comparison to a dedicated thumbstick:
 
\begin_inset Quotes eld
\end_inset

The results indicate that the Xbox controller had lower tracking errors
 and trended to lower workload and a slightly higher usability score as
 measured by the system usability scale (SUS)
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Rupp2013"
literal "false"

\end_inset

.
 This suggests that ergonomic design that is purpose built for two handed
 use could be key.
 Popular gamepads also have keyboard attachments available on the market,
 which could be considered acceptable if they can at least match the typing
 speed of a standard typist.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

A variety of `air mouse' devices do exist, however the hardware is often
 a lot less advanced, and they do not feature as large a range of input
 methods, or are as ergonomically designed.
 
\begin_inset CommandInset citation
LatexCommand citet
key "yunTurningMobileDevice2015"
literal "false"

\end_inset

 say that air mice 
\begin_inset Quotes eld
\end_inset

rely on accelerometers and gyroscopes, which significantly limit the accuracy
 and ease of use
\begin_inset Quotes erd
\end_inset

, however it has to be wondered whether that is only due to the one handed
 nature of such devices, which would likely reduce stability.
 Aiming is a task that is common during personal computing.
 The key issue with aiming is that users typically will make one large estimated
 movement and then 
\begin_inset Quotes eld
\end_inset

make small corrections
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

, meaning that any input method used has to be able to effectively accommodate
 both to be of any real use.
 A modern high resolution trackball could also be a solution for such aiming
 tasks, however much like the original trackball it requires 
\begin_inset Quotes eld
\end_inset

regular cleaning
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Nerrel2020"
literal "false"

\end_inset

 which could prove inconvenient due to the fact it is usually a time intensive
 process to clean a trackball.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Novel techniques also exist, such as LIDAR.
 Another approach is where the device 
\begin_inset Quotes eld
\end_inset

sends inaudible sound pulses at a few selected frequencies, and uses the
 frequency shifts to estimate the speed and distance travelled
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "yunTurningMobileDevice2015"
literal "false"

\end_inset

, a form of echolocation.
 Another technique involves 
\begin_inset Quotes eld
\end_inset

the phase of received WiFi signal
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "yunTurningMobileDevice2015"
literal "false"

\end_inset

.
 These newer technologies could all offer compelling experiences, however
 it is too early to be certain as the technologies have yet to properly
 enter the consumer space in a sizeable manner.
 In the context of the aforementioned two techniques, 
\begin_inset Quotes eld
\end_inset

evaluation and user study
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "yunTurningMobileDevice2015"
literal "false"

\end_inset

 shows that they can be combined to achieve 
\begin_inset Quotes eld
\end_inset

high tracking accuracy (e.g., median error of around 1.4 cm)
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "yunTurningMobileDevice2015"
literal "false"

\end_inset

.
\end_layout

\begin_layout Chapter
Design
\end_layout

\begin_layout Section
6axis considerations
\end_layout

\begin_layout Standard
"Humans can move our hands less when we're moving them downwards, and more
 when we move it upwards" according to Tsubasa Sakaguchi
\begin_inset CommandInset citation
LatexCommand citep
key "robinsonNintendoBrightFuture2015a"
literal "false"

\end_inset

.
 As a result, it can be assumed that such a consideration should perhaps
 be implemented if possible.
\end_layout

\begin_layout Section
Concept
\end_layout

\begin_layout Standard
In an ideal situation, .FL would leverage an existing codebase, in order
 to ensure the best performance and set of features.
 The easiest solution in such a hypothetical situation would be to design
 a plugin, however it is likely it would not be possible to modify the UI
 to offer clear gamepad control prompts.
 Beyond that, it seems that making a fork would be the best solution, this
 would require extensive knowledge of the codebase which is not available.
 Accounting for aforementioned issues, a more viable solution would be to
 create an application from scratch.
 Whilst test users will be permitted to use any variety of gamepad to ensure
 they have compatible hardware, the DS5 is the most promising hardware solution.
 As can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Basic-illustration-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the tilt of the gamepad is intended to directly translate to the motion
 of the cursor, as seen by the blue arrows, indicating the relationship
 of motion.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename motion-dia.svg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Basic illustration of the intended implementation
\begin_inset CommandInset label
LatexCommand label
name "fig:Basic-illustration-of"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Equipment
\end_layout

\begin_layout Standard
Any test user will need a few pieces of equipment to obtain a working system,
 it is believed that these pieces of equipment would be widely available,
 which is why it is believed this would be a good initial concept.
 The user must have a compatible gamepad, a PC and a display (integrated
 or otherwise).
\end_layout

\begin_layout Section
Etymology
\end_layout

\begin_layout Standard
After some thought, I decided to create a name based on function and then
 work onwards from that point, choosing an appropriate acronym.
 Dance of the flowing lines was the name that was chosen for two reasons.
 Firstly, the software would make use of motion, whilst the user will not
 literally dance, it can be expected that use of the software would result
 in an intricate method of movements that could be compared to dancing.
 Secondly, while attempts may be made to flesh out the drawing functionality
 the primary function will always be to draw lines, the act of drawing these
 lines should be much like the movements the user makes, thus it can be
 said that it flows with the user's movements.
 When turned into an acronym, this could very easily be DotFL; it would
 have in fact stayed as such, however I realised that when isolated, the
 first three letters spell out the word dot, so it could reasonably be simplifie
d further to .FL, this is easier to say verbally and could be viewed as being
 more aesthetically pleasing, so that will be the final official name.
\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Subsection
User experience level
\end_layout

\begin_layout Standard
There is no direct focus on how experienced a user is.
 I am, however, entirely new to the DS4 and DS5 that will play a major part
 in this study.
 I will try to dedicate time outside of development to become more experienced
 with the DS gamepads.
\end_layout

\begin_layout Section
Order of operation
\end_layout

\begin_layout Subsection
Overall process
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Flow-chart-of-software"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is a flow chart of how the software is expected to operate.
 Data is base64 encoded to prevent users from manipulating data to seem
 more successful at the test.
 While some may be staunch advocates for enumerated values, for whatever
 reason I am unable to efficiently work with them, therefore to switch between
 the differing tasks the program performs, it will read an integer value
 which will allow the use of case statements where applicable.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename main.dia
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flow chart of the software
\begin_inset CommandInset label
LatexCommand label
name "fig:Flow-chart-of-software"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Circle test
\end_layout

\begin_layout Standard
The first test is involves the user drawing a circle, which will be assessed
 for accuracy.
 This test is designed to assess the degree of fluid motion a type of input
 allows the user to achieve.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename circle.dia
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flow chart of the circle test
\begin_inset CommandInset label
LatexCommand label
name "fig:Flow-chart-of-circle"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Target test
\end_layout

\begin_layout Standard
This is the second test that exists to collect quantitative data.
 This could be thought of as similar to interacting with dialog windows
 in the GUI of a PC, or jumping to specific positions in a word processor
 document.
 To make the data comparable, the test will be quite similar to that seen
 in 
\begin_inset CommandInset citation
LatexCommand citet
key "Nerrel2020"
literal "false"

\end_inset

, however it will not be exactly the same, as the code for the original
 test is not accessible.
 To be more exact: for a period of 1 minute, red circles that will be 3-19MM
 on a 310MM width, 165MM height display will appear on a grey tinted chequerboar
d background until there are 3 circles on screen, the user must click within
 the circle radius to register a successful 'hit'; the test differs by using
 2d and not placing targets on a grid.
 Compensating for DPI was considered, however there is no standardised way
 to retrieve such a number, therefore such considerations may be best reserved
 for if a more in depth user study is needed at a later date.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Flow-chart-of-target"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is a flow chart of the target test.
 The user is given time to choose to continue to ensure that they do not
 begin a timed exercise with no idea what they are wanted to do.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename target.dia
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flow chart of the target test
\begin_inset CommandInset label
LatexCommand label
name "fig:Flow-chart-of-target"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Implementation
\end_layout

\begin_layout Section
Development tools
\end_layout

\begin_layout Subsection
GitHub
\end_layout

\begin_layout Standard
GitHub is used to store the project code.
 Alternatives such as Bitbucket or Gitlab were considered, however there
 were no notable advantageous features for doing so.
\end_layout

\begin_layout Subsection
Intellij idea
\end_layout

\begin_layout Standard
Intellij idea is used to aid in development of the code, it is capable of
 flagging various errors and actionable improvements, as well as having
 easy to use refactoring.
\end_layout

\begin_layout Section
Choosing the hardware library
\end_layout

\begin_layout Standard
Given the research so far, it would seem that JS is definitely the best
 option.
 This choice is not necessarily ideal, however it is perfectly doable, with
 P5.js as the supporting UI library.
 As seen in appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Response-to-project"
plural "false"
caps "false"
noprefix "false"

\end_inset

, a very good point was raised to attention that JNI could be used in order
 to use the native SDL library, whilst also using java, which is quicker
 to develop with than the native C++.
 I had not considered this as this, would add an extra layer that could
 impact performance, however I can see that in this case it could be optimal.
 I had found some JNI and JNA examples before, but disregarded them as they
 did not seem reliable; however as my supervisor recommended it, I will
 try to adapt them in some way, to create a workable solution.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

As a compiled language, C++ is the most performant choice of language, part
 of the continuing popularity of java is that it has higher performance
 than JS or python.
 Through the use of JNI, the most important underpinning library, SDL gets
 the most performant language.
 The use of JNI helps reduce future technical debt as when a rewrite is
 needed for more performance, it is very possible to replace components
 piece by piece rather than in one whole go.
 A codebase using java and C++ is certainly more preferable than a full
 JS application, thus this is the route that will be taken.
 After some consideration, it appears that LibJSDL will be the ideal base,
 as it aims to be performant and map directly.
 
\end_layout

\begin_layout Section
Adapting LibJSDL
\end_layout

\begin_layout Standard
The first step that was taken was to commit a test configuration for the
 fork of this library.
 It appears that the current version was somewhat of a work in progress,
 as it had over 300 stylistic errors according to the built in Checkstyle
 integration; this may be because it is a tentative feature upgrade branch
 for SDL 2.0.16, however it appears to have a lot of improvements, it seems
 appropriate to try integrating it to stay current.
 SDL 2.0.16 has some DS5 improvements, so the ability to interact with it
 would certainly be preferable choice
\begin_inset CommandInset citation
LatexCommand citep
key "Lantinga2021"
literal "false"

\end_inset

.
 It was possible to resolve all of the stylistic errors a lot quicker than
 expected, with minimal experience of the library it is hard to say whether
 all of the adaptations are correct, however producing an application utilising
 them would surely be an excellent way to test.
\end_layout

\begin_layout Section
Using LibJSDL
\end_layout

\begin_layout Standard
The next step has been to add the library as a sub-module.
 Now with the library integrated into the project the next step will be
 to properly utilise it, although many routes could be taken, the one that
 will be taken shall be the official documentation, which can most likely
 be matched up to LibJSDL.
 There appears to be no directly official beginners guide, so a different
 one was used
\begin_inset CommandInset citation
LatexCommand citep
key "Lantinga2022"
literal "false"

\end_inset

.
 After the basics it became unclear what subsystems the DualSense would
 use, after some research it appeared that the joystick subsystem was the
 correct choice.
 Unfortunately after successfully following a tutorial
\begin_inset CommandInset citation
LatexCommand citep
key "Foo2019"
literal "false"

\end_inset

 SDL seemed to only detect one joystick.
 Although the joystick reports having 6 axes which could cover all the loaded
 joysticks, none of them appear to hold data.
 As an alternative, it was be switched to the GameController API which appears
 to better access the hardware.
 Afterwards it is unclear what the next step is, however it appears that
 the software yuzu implements motion control in the exact way required
\begin_inset CommandInset citation
LatexCommand citep
key "German2021"
literal "false"

\end_inset

, as a result the way forward may be to examine the relevant code and implement
 something similar.
\end_layout

\begin_layout Section
Yuzu inspired implementation
\end_layout

\begin_layout Standard
Although the methods used can by no means be copied on a 1:1 basis, a lot
 of them are similar enough that minimal adaptation is required.
 Yuzu uses a robust series of checks to ensure that the correct kind of
 gamepad is connected, this is a good idea, as it may increase startup time,
 however it makes it possible to give the user a clear error message.
 Yuzu uses an event based structure to read the gamepad data, this is not
 too unusual for applications that need to react to various events so .FL
 will do the same.
 Yuzu specifically uses an event watcher, with enough effort it could also
 work in .FL, however it was proving difficult to do so.
 As an alternative, it is possible to use a loop based structure
\begin_inset CommandInset citation
LatexCommand citep
key "Shah2021"
literal "false"

\end_inset

, which can be a lot easier to understand.
 Whereas yuzu uses a multi threaded codebase, there are no current plans
 to make .FL multi-threaded, so all code will be made to be single threaded.
 Any potential performance impact from minimal multi-threading may be reduced
 somewhat, through the use of static variables where yuzu appears to use
 a more object orientated approach.
\end_layout

\begin_layout Section
SDL4J improvements
\end_layout

\begin_layout Standard
After a while it become apparent that the code needed a class that LibJSDL
 did not have: ``SDL_ControllerSensorEvent
\begin_inset Quotes erd
\end_inset

.
 At first this class was implemented manually, however through chance the
 discovery was made that SDL4J (
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:SDL4J"
plural "false"
caps "false"
noprefix "false"

\end_inset

) already implemented the class, with some noticeable levels of improvement.
 An issue occurred where a lot of the SDL_ControllerSensorEvent data was
 incorrect, after some comparison with the SDL4J class, it became apparent
 that the use of NativeLong was incorrect and should have been int, an error
 which misaligned the called addresses
\begin_inset CommandInset citation
LatexCommand citep
key "Widdis2020"
literal "false"

\end_inset

.
 Some final things that were adapted from SDL4J include missing enumerated
 values, a better inheritance structure (with additions) and more in depth
 code comments.
\end_layout

\begin_layout Section
Continued SDL development
\end_layout

\begin_layout Standard
Now with the library appropriately enhanced it should be possible to finish
 implementing the ability to read gyroscopic data.
 In the code was the equation 
\begin_inset Formula $v=\frac{\omega}{2\pi}$
\end_inset

 which was challenging to understand, as there was no explanation in the
 yuzu code.
 Based on ω being radians per second, further research reveals that v is
 the cycles per second, or hertz
\begin_inset CommandInset citation
LatexCommand citep
key "Mills2016"
literal "false"

\end_inset

.
 As either with or without the equation, the value would still be relative
 to the level of rotation observed in an axis, it is not immediately obvious
 why this extra layer of mathematics would be needed, however it is included
 for the sake of completeness.
 Collecting the data is one step, however in the yuzu codebase there is
 a clear effort to log the time of the last event and the current event.
 The assumption would be that events should be evenly spaced, however that
 is not the case, a brief investigation shows that they can change a lot,
 or in some cases not at all.
 It is uncertain whether timestamps will be important for a basic implementation
, however timestamps may prove useful later to help smooth out the drawing
 experience, helping to improve the use experience for users that may be
 more frustrated by uneven input updates, such as digital artists.
 A step of preparation for future input smoothing will be taken by ignoring
 timestamps with no difference, as it would be impossible to smooth those
 such events as there is no recorded difference in time.
 As the identical timestamps do, in fact, have differing data, it may be
 wise to still log the data and calculate the mean average for all those
 events, for use in the smoothing algorithm, as well as correcting the cursor
 position keeping them in mind.
 The aforementioned handling of duplicate events may introduce latency,
 so it will be important to allow the user to select between high accuracy
 and low latency.
\end_layout

\begin_layout Section
Introducing: the processing library
\end_layout

\begin_layout Standard
During integration it was discovered that a good processing template existed
 that the repository could have been based on.
 In order to properly credit the template, it was necessary to create a
 repository using that template then cherry-pick the commits from the original
 repository one by one.
 In the original codebase with just SDL the code to report the data had
 to be inside an infinite while loop, with processing the while loop was
 no longer required thanks to processing's draw loop.
 The extra difficulties created by starting with SDL code raises the question
 whether it would have made more sense to start with processing, however
 on the other hand if retrieving motion data proved to be not currently
 possible, then there would be no .FL, and processing may not be required
 anymore.
\end_layout

\begin_layout Section
The circle test
\end_layout

\begin_layout Standard
As a starting point, an existing open source circle test that was written
 in JS was adapted to java.
 Various aspects of the code were simplified as there was originally a somewhat
 strong focus on an overuse of variable initialisation and code that exists
 purely for aesthetic reasons.
 As JS is weakly typed, at various points the correct type had to be estimated
 in order to produce usable code.
 This adapted code would rate drawn circles roughly out of 20.
 The functionality of this early version can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-prototype-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename circletest.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A prototype of the circle drawing test
\begin_inset CommandInset label
LatexCommand label
name "fig:A-prototype-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Environmental hazard
\end_layout

\begin_layout Standard
Unfortunately development was stalled due to seasons changing, leading to
 wasps invading the workplace; this created unproductive working conditions
 which could become unsafe over time.
 It was not possible to use a barrier such as a closed window to prevent
 entry of wasps, due to the fact the workplace had no vents and regardless
 needed an open window for temperature control as it is over-insulated and
 can quickly accumulate heat otherwise.
 Whilst field research showed that a WD2 was capable of neutralising a small
 localised population of wasps (albeit with some ethical ramifications),
 it would be unable to handle larger populations inhabiting the workplace,
 especially as they were able enter spaces such as the interior of flush
 fitted light fittings or water heaters, which a WD2 would not be able to
 effectively or safely uninhabit.
 This issue was solved through the acquisition of a glade solid gel scent
 diffuser, cheaper brands were considered, however user testimonials seemed
 to suggest they may not be as effective and the merchant's price of ₤1
 for the glade version was deemed to be within allowance.
 The scent diffuser was effective due to its inclusion of lavender oil,
 which wasps (such as paper wasps) are strongly repelled by
\begin_inset CommandInset citation
LatexCommand citet
key "zhangEssentialOilsTheir2013"
literal "false"

\end_inset

.
 It is worth noting that whilst the ethical concern has been alleviated,
 there is now an environmental concern due to waste plastics.
\end_layout

\begin_layout Section
Application of further guidance
\end_layout

\begin_layout Standard
After a meeting some changes were made.
 The first change was to start calling 'mistakes' the 'error factor' as
 it was deemed to be less ambiguous.
 The next change was to use floating point at various points, in order to
 increase calculation accuracy.
 After talks over the code it was evident that there was a lot of excess
 complexity to the code which was removed.
 After some discussion it was decided to implement two tests: a circle drawing
 test and a randomised target test, akin to that undertaken in 
\begin_inset CommandInset citation
LatexCommand citet
key "Nerrel2020"
literal "false"

\end_inset

.
 The goal of the aforementioned tests is to generate quantitative data that
 could be used later.
 doubt has begun when it comes to whether .FL will exist as a full usable
 application, it may be limited to just a set of tests or a basic single
 colour drawing function.
 The error factor is now divided by the radius to make the data normalised
 independent to circle size.
\end_layout

\begin_layout Section
The target test
\end_layout

\begin_layout Standard
The first instinct was to choose a randomised size up to 19, however as
 seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:An-early-prototype"
plural "false"
caps "false"
noprefix "false"

\end_inset

 even the largest targets were proportionately quite small.
 Based on what is approximately one of the largest targets, it would appear
 that size 19 could approximately be 3MM.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename target-test-prototype.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
An early prototype of the target test
\begin_inset CommandInset label
LatexCommand label
name "fig:An-early-prototype"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

Logically, it can be inferred that 1MM is equal to 6.3, therefore to achieve
 a maximum size of 19MM a value of 120.3 should presumably be used, which
 does result in the intended effect.
 While it might appear that a lot of work has been achieved, there is one
 key issue: the user must be able to interact with the targets.
 The issue of interaction can be solved through the implementation of a
 'target' object, such an object would be able to persist between loops
 and cease to exist upon a successful hit.
 After more thought, it it is clear it would be perfectly possible to forego
 that and achieve more performant code.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-more-refined"
plural "false"
caps "false"
noprefix "false"

\end_inset

 illustrates the improved target layout.
 Rather than drawing the circles every loop, the circles are drawn once
 then replaced with background coloured circles upon a detected hit, this
 is the most efficient way to operate, as processing uses a canvas model,
 resulting in just two drawing operations per circle as opposed to 3 per
 loop.
 In addition, the if statements have been optimised to check for mouse clicks
 then whether or not the target test mode is turned on, in order to try
 and ensure least possible latency for such a time critical operation.
 It was later chosen to use an alternative erasure mechanism where the canvas
 is cleared and all targets are redrawn, with the hit target being rewritten
 so it will now be different.
 Just like the maximum size was calculated, the minimum size was calculated
 to be 18.9MM.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename target-test-better.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A more refined spread of targets
\begin_inset CommandInset label
LatexCommand label
name "fig:A-more-refined"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Evaluation
\end_layout

\begin_layout Section
Future hardware developments
\end_layout

\begin_layout Subsection
Gamepad
\end_layout

\begin_layout Standard
It can be expected that future developments will create an even better version
 of an already good experience, as companies learn from each other and innovate.
 As can be imagined, any developments from Sony are of particular interest,
 as their DS5 is the current best candidate.
 Whilst a purpose built gamepad could certainly be made, I'm unsure how
 much benefit would be derived from such a concept.
 After looking through developments I will hypothesise on the ideal DS6,
 then a more realistic DS6.
\end_layout

\begin_layout Subsubsection
Collapsible thumbsticks
\end_layout

\begin_layout Standard
There is a patent for collapsible thumbsticks that has been filed, the goal
 is to make gamepads more portable.
 As seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-cross-sectional-comparison"
plural "false"
caps "false"
noprefix "false"

\end_inset

, point 101 is replaced with a full spring assembly, point 102 also appears
 to become more reinforced.
 In this current iteration, point 207 has a clear risk of snapping, due
 to point 211 not having enough depth.
 208 is a spring, it can be assumed that this is to sustain enough rigidity
 to allow thumbstick clicks (where the entire thumbstick is temporarily
 pushed down into the gamepad, producing a ``click
\begin_inset Quotes erd
\end_inset

 sound) as well as providing a consistent unlocked thumbstick height.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename collapse1.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A cross-sectional comparison of a standard thumbstick and a proposed collapsible
 thumbstick
\begin_inset CommandInset citation
LatexCommand citep
key "khimVideoGameController1970"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:A-cross-sectional-comparison"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-diagram-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows the design numbered 2 improved so the breakage point is protected.
 The design of 3A is definitely superior, as it protects the internal shaft
 thanks to point 303's addition, which may offer shock protection.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename collapse2.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A diagram of a collapsible thumbstick, an upgraded design 2 is showed collapsed,
 as well as a new design 3
\begin_inset CommandInset citation
LatexCommand citep
key "khimVideoGameController1970"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:A-diagram-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-diagram-of-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows design 3 in the collapsed mode.
 As can be seen, this design offers full shaft protection both lowered and
 raised.
 I struggle to fathom the purpose of point 308, perhaps the circle just
 exists for annotation purposes.
 Design 3 seems to in many ways offer a lot of protection, while also adding
 the same new functionality.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename collapse3.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A diagram of the collapsed design 3 thumbstick model, it seems to have some
 structural reinforcement
\begin_inset CommandInset citation
LatexCommand citep
key "khimVideoGameController1970"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:A-diagram-of-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The next drawing is skipped, it shows nothing new that isn't showed in the
 following drawing.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Isometric-drawings-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows two hypothetical locking mechanisms.
 4D is a standard rotary lock, the use of only one locking point could affect
 longevity or stability.
 If I were to design it, I would have used two radial sets of grooves, they
 do mention something to that effect as an option.
 404 and 409 are hooks which hold an elastic band; theoretically this is
 repairable, although users may find it difficult.
 Thumbsticks are typically plastic, however they make extensive mention
 of kinds of metals that could be used, suggesting that they may believe
 plastic would be too weak.
 5 is a more advanced system that uses non-Newtonian fluid.
 5 is interesting, however it could be considered to be over-engineered
 and a negative impact to repairability.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename collapse5.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Isometric drawings of the potential locking mechanisms that could be used
\begin_inset CommandInset citation
LatexCommand citep
key "khimVideoGameController1970"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Isometric-drawings-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Overall, this is an interesting way to create a more portable gamepad.
 I feel it could be improved by allowing the thumbsticks to collapse into
 the body fully, rather than just partially.
 This feels especially important because while it is mentioned that thumbsticks
 are prone to becoming caught in fabric, the final design shown does not
 actually reduce the risk of becoming caught in fabric, only the risk of
 breakage.
 The only reason I can imagine they would want that behaviour is to mimic
 the behaviour of the ``analogue nubs
\begin_inset Quotes erd
\end_inset

 they mention earlier, by which they probably mean the controlstick which
 is seen on the PSP as seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-analog-nub"
plural "false"
caps "false"
noprefix "false"

\end_inset

, seeing as it is a Sony patent
\begin_inset CommandInset citation
LatexCommand citep
key "khimVideoGameController1970"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename nubs.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The analogue nub, the PSP's distinctive low-profile controlstick
\begin_inset CommandInset citation
LatexCommand citep
key "Guide2011"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:The-analog-nub"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Keyboard
\end_layout

\begin_layout Section
Future software developments
\end_layout

\begin_layout Standard
Whilst the end goal would probably be to integrate 6axis into more popular
 software such as GIMP or Krita, there is nothing to say that the software
 produced by this project will be overly useless.
 The software can serve multiple purposes explored below.
\end_layout

\begin_layout Subsection
As part of an OS
\end_layout

\begin_layout Standard
I may decide to include the resultant software as part of DidOS as a semi
 exclusive bundled accessory.
 DidOS is a Linux based, source compiled OS in the very early stages of
 production.
\end_layout

\begin_layout Subsection
Demo
\end_layout

\begin_layout Standard
.FL could serve as a demo for a larger set of 6axis software, much like demo
 software for frameworks.
\end_layout

\begin_layout Subsection
Familiarisation
\end_layout

\begin_layout Standard
.FL could serve as a way to familiarise users with 6axis, due to it mirroring
 a concept users are often already very familiar with.
\end_layout

\begin_layout Subsection
Concept model
\end_layout

\begin_layout Standard
.FL could serve as a reference model for further integrations into more popular
 software as aforementioned.
\end_layout

\begin_layout Subsection
Niche interest
\end_layout

\begin_layout Standard
.FL may just happen to fit one of the smaller demographics, such as those
 with strict licensing requirements, language enthusiasts or both.
\end_layout

\begin_layout Chapter
References preface
\end_layout

\begin_layout Standard
Credit for online references is based on the textual content, hence user
 reactions to posts/comments will be ignored.
 Please note that for patents the issue date automatically resets in the
 reference management software to the year 1970, so the real issue date
 has been added as a note in those cases.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "library"
options "bibtotoc,agsm"

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Showcase slides
\end_layout

\begin_layout Chapter
.FL code
\end_layout

\begin_layout Chapter
Feasibility study review email
\begin_inset CommandInset label
LatexCommand label
name "chap:Feasibility-study-review"

\end_inset


\end_layout

\begin_layout Standard
From: Huw Lloyd <Huw.Lloyd@mmu.ac.uk>
\begin_inset Newline newline
\end_inset

Sent: 18 October 2021 10:35
\begin_inset Newline newline
\end_inset

To: Seirra Blake <SEIRRA.BLAKE@stu.mmu.ac.uk>
\begin_inset Newline newline
\end_inset

Subject: RE: Request for review of feasibility study
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Hi Seirra,
\begin_inset Newline newline
\end_inset

This is looking pretty good, and certainly fine to submit, but a few things
 to think about:
\end_layout

\begin_layout Enumerate
You could be more detailed in the timeline.
 Getting more detail in here is really about breaking the task down into
 smaller chunks and thinking about the relative size of each part 
\end_layout

\begin_layout Enumerate
The background is quite long, which is good in terms of getting ahead of
 the game for the report, where this can form part of your literature review.
 When you do repurpose it for that, think about organizing it into subsections,
 and providing some overarching structure at the beginning.
\end_layout

\begin_layout Enumerate
There is a lot of quoting here, which is fine, but when the quotes are only
 a few words long, think about paraphrasing instead.
 Quotes can then be reserved for longer sections.
\end_layout

\begin_layout Enumerate
A few issues with quotation marks, especially around “Nerrel”.
 Sometimes the quotation marks are the wrong way round.
 If you are using latex, you need to open quotes with `` and close with
 "
\end_layout

\begin_layout Standard
A general point about the project – is linux a good idea here, or would
 windows be easier? You can try both, but I think a library like SFML could
 give you controller support and easy access to graphics.
 I think there are windows and linux versions of this.
\begin_inset Newline newline
\end_inset

Regards
\begin_inset Newline newline
\end_inset

Huw
\begin_inset Newline newline
\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\begin_inset Newline newline
\end_inset

Dr Huw Lloyd
\begin_inset Newline newline
\end_inset

Department of Computing and Mathematics
\begin_inset Newline newline
\end_inset

Manchester Metropolitan University
\begin_inset Newline newline
\end_inset

John Dalton Building
\begin_inset Newline newline
\end_inset

Chester Street
\begin_inset Newline newline
\end_inset

Manchester M1 5GD
\begin_inset Newline newline
\end_inset

Senior Lecturer, School Disability Coordinator.
\begin_inset Newline newline
\end_inset

Email: Huw.Lloyd@mmu.ac.uk Tel: 0161 247 1568 
\begin_inset Newline newline
\end_inset

Office: E131, John Dalton East (office hours – Mon 10-11, Tues 11-12, Thurs
 10-11)
\end_layout

\begin_layout Chapter
DS4 user discussion transcript
\begin_inset CommandInset label
LatexCommand label
name "chap:DS4-user-discussion"

\end_inset


\end_layout

\begin_layout Standard
``You know it's micro USB right? I just use the adaptor that came with it
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Chapter
Response to project update
\begin_inset CommandInset label
LatexCommand label
name "chap:Response-to-project"

\end_inset


\end_layout

\begin_layout Standard
From: Huw Lloyd <Huw.Lloyd@mmu.ac.uk>
\begin_inset Newline newline
\end_inset

Sent: 14 January 2022 11:25
\begin_inset Newline newline
\end_inset

To: Seirra Blake <SEIRRA.BLAKE@stu.mmu.ac.uk>
\begin_inset Newline newline
\end_inset

Subject: RE: Project update 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Hi Seirra,
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Thanks for the update.
 Sorry it’s taken me a while to get back to you.
 In terms of languages, you could look into using JNI (Java Native Interface)
 to call functions from a DLL written in C++ in a Java application.
 You could wrap the parts of SDL you want into your own DLL (minimizing
 the amount of C++ coding required) and then write your application in Java.
 If you find Javascript bindings that do what you want and you are happy
 with that language, then that is fine.
 You could maybe then use something like Electron or ReactNative to develop
 the application.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

You should probably focus on getting one controller to work, so that you
 have time to develop the application and do the user research.
 Doing more could be too ambitious given the amount of work expected in
 for a final year project.
 Overcoming the technical hurdles required to bring these different libraries
 together would be a substantial piece of work which could make a good project
 report.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Regards
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Huw
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\begin_inset Newline newline
\end_inset

Dr Huw Lloyd - Senior Lecturer, Departmental Disability Coordinator
\begin_inset Newline newline
\end_inset

Department of Computing and Mathematics, Manchester Metropolitan University,
 Manchester M1 5GD
\begin_inset Newline newline
\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\end_body
\end_document
